version: "3.2"
services:

  # docker image prune -a

# 내 피씨에서 실행할때 사용
#  mysql:
##    platform: linux/x86_64
##    image: mysql:5.7.25
#    image: library/mysql:5.7
#    container_name: dataflow-mysql
#    environment:
#      MYSQL_DATABASE: dataflow
##      MYSQL_USER: lawshop
#      MYSQL_ROOT_PASSWORD: znzn2753@
#      TZ: Asia/Seoul
#    ports:
#      - "3306:3306"
#    volumes:
#      - ./docker/mysql/var/lib/mysql:/var/lib/mysql
#      - ./docker/mysql/init:/docker-entrypoint-initdb.d

  kafka-broker:
#    platform: linux/x86_64
    image: confluentinc/cp-kafka:5.5.2
    container_name: dataflow-kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker:9092
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_HOST_NAME=kafka-broker
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LOG4J_ROOT_LOGLEVEL=ERROR
      - KAFKA_LOG4J_LOGGERS=org.apache.zookeeper=ERROR,org.apache.kafka=ERROR,kafka=ERROR,kafka.cluster=ERROR,kafka.controller=ERROR,kafka.coordinator=ERROR,kafka.log=ERROR,kafka.server=ERROR,kafka.zookeeper=ERROR,state.change.logger=ERROR
    volumes:
      - ./docker/kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  zookeeper:
#    platform: linux/x86_64
    image: confluentinc/cp-zookeeper:5.5.2
    container_name: dataflow-kafka-zookeeper
    ports:
      - "2181:2181"
    volumes:
      - ./docker/zookeeper/data:/var/lib/zookeeper/data
      - ./docker/zookeeper/log:/var/lib/zookeeper/log
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  dataflow-server:
#    platform: linux/x86_64
    user: root
    image: springcloud/spring-cloud-dataflow-server:${DATAFLOW_VERSION:-2.9.1}${BP_JVM_VERSION:-}
    container_name: dataflow-server
    ports:
      - "9393:9393"
    environment:
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=PLAINTEXT://kafka-broker:9092
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_STREAMS_BINDER_BROKERS=PLAINTEXT://kafka-broker:9092
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_BINDER_ZKNODES=zookeeper:2181
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_CLOUD_STREAM_KAFKA_STREAMS_BINDER_ZKNODES=zookeeper:2181

      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_STREAM_SPRING_KAFKA_STREAMS_PROPERTIES_METRICS_RECORDING_LEVEL=DEBUG
      # Set CLOSECONTEXTENABLED=true to ensure that the CRT launcher is closed.
      - SPRING_CLOUD_DATAFLOW_APPLICATIONPROPERTIES_TASK_SPRING_CLOUD_TASK_CLOSECONTEXTENABLED=true

      - SPRING_CLOUD_SKIPPER_CLIENT_SERVER_URI=${SKIPPER_URI:-http://skipper-server:7577}/api
#     TODO TEST DB, LOCALDB
#      - SPRING_DATASOURCE_URL=jdbc:mariadb://116.126.158.6:3306/dataflow
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/dataflow
      - SPRING_DATASOURCE_URL=jdbc:mariadb://116.126.158.6:3306/dataflowTest
      - SPRING_DATASOURCE_USERNAME=lawshop
      - SPRING_DATASOURCE_PASSWORD=znzn2753@
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MariaDB102Dialect
      # (Optionally) authenticate the default Docker Hub access for the App Metadata access.
      - SPRING_CLOUD_DATAFLOW_CONTAINER_REGISTRY_CONFIGURATIONS_DEFAULT_USER=${METADATA_DEFAULT_DOCKERHUB_USER}
      - SPRING_CLOUD_DATAFLOW_CONTAINER_REGISTRY_CONFIGURATIONS_DEFAULT_SECRET=${METADATA_DEFAULT_DOCKERHUB_PASSWORD}

      - SPRING_CLOUD_DATAFLOW_CONTAINER_REGISTRYCONFIGURATIONS_DEFAULT_USER=${METADATA_DEFAULT_DOCKERHUB_USER}
      - SPRING_CLOUD_DATAFLOW_CONTAINER_REGISTRYCONFIGURATIONS_DEFAULT_SECRET=${METADATA_DEFAULT_DOCKERHUB_PASSWORD}
    depends_on:
      - kafka-broker
      - skipper-server
    entrypoint: >
      bin/sh -c "
         apt-get update && apt-get install --no-install-recommends -y wget &&
         wget --no-check-certificate -P /tmp/ https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh &&
         chmod a+x /tmp/wait-for-it.sh &&
         /tmp/wait-for-it.sh 116.126.158.6:3306 -- /cnb/process/web"
    volumes:
      - ./docker/dataflow-server:/var/lib/dataflow-server
      - ./docker/dataflow-server/logs:/var/log/dataflow-server
      - ./docker/dataflow-server/tmp:/tmp
      - /Users/jinhuipark/.m2:/root/.m2

  app-import-stream:
#    platform: linux/x86_64
    image: springcloud/baseimage:1.0.0
    container_name: dataflow-app-import-stream
    depends_on:
      - dataflow-server
    command: >
      /bin/sh -c "
        ./wait-for-it.sh -t 360 dataflow-server:9393;
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps' --no-check-certificate --post-data='uri=${STREAM_APPS_URI:-https://dataflow.spring.io/kafka-maven-latest&force=true}';
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps/sink/ver-log/3.0.1' --no-check-certificate --post-data='uri=maven://org.springframework.cloud.stream.app:log-sink-kafka:3.0.1';
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps/sink/ver-log/2.1.5.RELEASE' --no-check-certificate --post-data='uri=maven://org.springframework.cloud.stream.app:log-sink-kafka:2.1.5.RELEASE';
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps/sink/dataflow-tasklauncher/${DATAFLOW_VERSION:-2.9.1}' --no-check-certificate --post-data='uri=maven://org.springframework.cloud:spring-cloud-dataflow-tasklauncher-sink-kafka:${DATAFLOW_VERSION:-2.9.1}';
        echo 'Maven Stream apps imported'"

  app-import-task:
#    platform: linux/x86_64
    image: springcloud/baseimage:1.0.0
    container_name: dataflow-app-import-task
    depends_on:
      - dataflow-server
    command: >
      /bin/sh -c "
        ./wait-for-it.sh -t 360 dataflow-server:9393;
        wget -qO- '${DATAFLOW_URI:-http://dataflow-server:9393}/apps' --no-check-certificate --post-data='uri=${TASK_APPS_URI:-https://dataflow.spring.io/task-maven-latest&force=true}';
        echo 'Maven Task apps imported'"

  skipper-server:
#    platform: linux/x86_64
    user: root
    image: springcloud/spring-cloud-skipper-server:${SKIPPER_VERSION:-2.8.1}${BP_JVM_VERSION:-}
    container_name: skipper
    ports:
      - "7577:7577"
      - ${APPS_PORT_RANGE:-20000-20195:20000-20195}
    environment:
      - SPRING_CLOUD_SKIPPER_SERVER_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_PORTRANGE_LOW=20000
      - SPRING_CLOUD_SKIPPER_SERVER_PLATFORM_LOCAL_ACCOUNTS_DEFAULT_PORTRANGE_HIGH=20190
      # TODO
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/dataflow
#      - SPRING_DATASOURCE_URL=jdbc:mariadb://116.126.158.6:3306/dataflow
      - SPRING_DATASOURCE_URL=jdbc:mariadb://116.126.158.6:3306/dataflowTest
      - SPRING_DATASOURCE_USERNAME=lawshop
      - SPRING_DATASOURCE_PASSWORD=znzn2753@
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_SKIPPER_SERVER_DEPLOYER=ERROR
    entrypoint: >
      bin/sh -c "
         apt-get update && apt-get install --no-install-recommends -y wget &&
         wget --no-check-certificate -P /tmp/ https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh &&
         chmod a+x /tmp/wait-for-it.sh &&
         /tmp/wait-for-it.sh 116.126.158.6:3306 -- /cnb/process/web"
    volumes:
      - ./docker/skipper-server:/var/lib/skipper-server
      - ./docker/skipper-server/logs:/var/log/skipper-server

# Port 확인 sudo lsof -i :port
#networks:
#  mariadb:
#    driver: bridge
#  jenkins:
#    driver: bridge